package commands

import (
	"sort"

	"github.com/bwmarrin/discordgo"
	bang "github.com/hashbat-dev/discgo-bot/Bot/Commands/Bang"
	config "github.com/hashbat-dev/discgo-bot/Config"
)

type Command interface {
	Name() string
	Execute(*discordgo.MessageCreate, string) error
	PermissionRequirement() int
	Complexity() int
}

var (
	JumpTable = make(map[string]CommandJumpEntry)
)

type CommandJumpEntry struct {
	Command     Command
	Description string
}

func init() {
	// ===[Add Bang Commands]===========================================
	JumpTable["speech"] = CommandJumpEntry{bang.GetImage{ImageCategory: "speech"}, "Return a random Speech Bubble GIF from the Server's !speech pool"}
	JumpTable["ttsinfo"] = CommandJumpEntry{bang.TTSInfo{}, "Reply to a Text-to-Speech file generated by this bot to see submission information for the file"}

	// Write the Help text
	writeBangHelpText()
}

func writeBangHelpText() {
	// 1. Extract the keys from the JumpTable
	keys := make([]string, 0, len(JumpTable))
	for key := range JumpTable {
		keys = append(keys, key)
	}

	// 2. Sort the keys alphabetically
	sort.Strings(keys)

	// 3. Use the sorted keys to access the corresponding CommandJumpEntry
	text := ""
	for i, key := range keys {
		entry := JumpTable[key]
		cmdText := "* **!" + key + "**: " + entry.Description
		if i > 0 {
			text += "\n"
		}
		text += cmdText
	}

	// 3. Set it in the Config
	config.UserBangHelpText = text
}
